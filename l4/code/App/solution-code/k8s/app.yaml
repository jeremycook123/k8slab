cat << eof | kubectl apply -f -
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf-v1
  labels:
    version: v1
data:
  nginx.conf: |-
    server {
        listen 80;
        server_name localhost;

        location / {
            return 200 'CloudAcademy.v1.0.0\n';
            add_header Content-Type text/plain;
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf-v2
  labels:
    version: v2
data:
  nginx.conf: |-
    server {
        listen 80;
        server_name localhost;

        location / {
            return 200 'CloudAcademy.v2.0.0\n';
            add_header Content-Type text/plain;
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-v1
  labels:
    role: frontend
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      role: frontend
      version: v1
  template:
    metadata:
      labels:
        role: frontend
        version: v1
    spec:
      containers:
      - name: nginx
        image: nginx:1.13.7
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 80
        volumeMounts:
        - name: nginx-proxy-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
      volumes:
      - name: nginx-proxy-config
        configMap:
          name: nginx-conf-v1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-v2
  labels:
    role: frontend
    version: v2
spec:
  replicas: 2
  selector:
    matchLabels:
      role: frontend
      version: v2
  template:
    metadata:
      labels:
        role: frontend
        version: v2
    spec:
      containers:
      - name: nginx
        image: nginx:1.13.7
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 80
        volumeMounts:
        - name: nginx-proxy-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
      volumes:
      - name: nginx-proxy-config
        configMap:
          name: nginx-conf-v2
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    role: frontend
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    role: frontend
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: frontend
spec:
  host: frontend.default.svc.cluster.local
  trafficPolicy:
    loadBalancer:
      simple: LEAST_CONN
  subsets:
  - name: v1
    labels:
      version: v1
    trafficPolicy:
      loadBalancer:
        simple: ROUND_ROBIN
  - name: v2
    labels:
      version: v2
    trafficPolicy:
      loadBalancer:
        simple: ROUND_ROBIN
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: frontend-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "app.cloudacademy.18.236.243.241.nip.io"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: frontend-vs
spec:
  hosts:
  - "app.cloudacademy.18.236.243.241.nip.io"
  gateways:
  - frontend-gateway
  http:
  - route:
    - destination:
        host: frontend.default.svc.cluster.local
        subset: v1
        port:
          number: 80
      weight: 80
    - destination:
        host: frontend.default.svc.cluster.local
        subset: v2
        port:
          number: 80
      weight: 20
eof
